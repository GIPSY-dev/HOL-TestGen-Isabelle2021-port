(*****************************************************************************
 * HOL-TestGen --- theorem-prover based test case generation
 *                 http://www.brucker.ch/projects/hol-testgen/
 *                                                                            
 * version.thy --- Version information for HOL-TestGen
 * This file is part of HOL-TestGen.
 *
 * Copyright (c) 2013 Achim D. Brucker, Germany
 *               2016 The University of Sheffield, UK
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials provided
 *       with the distribution.
 *
 *     * Neither the name of the copyright holders nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************)
(* $Id: log_thy.thy 9570 2013-02-02 14:47:51Z brucker $ *)

theory 
  version 
imports 
  Main 
begin 

ML_file "config.sml"

ML {*
val testgen_version = Int.toString(testgen_ver_major)^"."^Int.toString(testgen_ver_minor)^"."
                        ^Int.toString(testgen_ver_micro)^testgen_ver_tag
val version = "HOL-TestGen "^testgen_version^" , based on "^(Distribution.version); 
val _ = if (Distribution.version = (isabelle_version))
	then ()
        else let 
	             val line0 = "Unsupported Isabelle version: \""^(Distribution.version)^"\""
	             val line1 = "Only \""^isabelle_version^"\" is supported."
             in
	             warning line0;
	             warning line1;
               Output.physical_stderr("###\n");
               Output.physical_stderr("### "^line0^"\n");
               Output.physical_stderr("### "^line1^"\n");
               Output.physical_stderr("###\n")
             end
*}


ML {* 
   let 
      val today = (Date.toString(Date.fromTimeUniv (Time.now())))^" (UTC)";
      val tex_header  = "% This file is generated automatically. Do not edit.\n"
                       ^"% Generated by HOL-TestGen"^testgen_version^"\n"
                       ^"% on "^today^".\n"
                       ^"% \n";
      val tex_version = "\\newcommand{\\testgen}{HOL-TestGen}\n"
                       ^"\\newcommand{\\testgenFW}{HOL-TestGen/FW}\n"
                       ^"\\newcommand{\\isabelleversion}{"^(Distribution.version)^"}\n"
                       ^"\\newcommand{\\testgenversion}{"^testgen_version^"}\n"
                       ^"\\newcommand{\\testgenversiontag}{"^testgen_ver_tag^"}\n"
                       ^"\\newcommand{\\testgenurl}{\\url{"^testgen_url^"}}\n"
   in
      File.write (Path.explode "document/version.tex") (tex_header^tex_version)
      handle (IO.Io{name=name,...}) => warning ("Could not create \""^name
                                               ^"\". Document preparation might fail.")
   end 
*}

end
